{"version":3,"sources":["apis/openweathermap.js","actions/index.js","components/postList.js","components/SearchBox.js","components/App.js","reducers/index.js","reducers/postWeather.js","index.js"],"names":["axios","create","baseURL","fetchWeather","searchValue","dispatch","a","openweathermap","get","then","response","type","payload","data","catch","err","alert","fetchWeatherCoords","lat","long","PostList","onCliChange","id","onValid","props","posts","main","pressure","temp","temp_max","temp_min","humidity","speed","wind","weather","description","name","country","sys","CalcTemp","Math","round","icon","document","body","style","backgroundImage","getElementsByClassName","n","Date","toDateString","className","console","log","this","length","Component","connect","state","SearchBox","term","onFormSubmit","event","preventDefault","setState","onGeolocation","coords","latitude","longitude","navigator","geolocation","getCurrentPosition","position","onSubmit","placeholder","value","onChange","e","target","bindActionCreators","App","combineReducers","action","Index","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.59213167.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL:'http://api.openweathermap.org/data/2.5'\r\n});\r\n","import openweathermap from '../apis/openweathermap';\r\n\r\nexport const fetchWeather = (searchValue) => async dispatch => {\r\n  await openweathermap.get(`/weather?q=${searchValue}&appid=9af1d53ab396d07e060362a1b6c5c8cb`)\r\n  .then(response => dispatch({type:'FETCH_WEATHER_SEARCH',payload:response.data}))\r\n  .catch(err => alert('WRONG INPUT,CHECK YOUR SEARCH VALUE'))\r\n\r\n};\r\n\r\nexport const fetchWeatherCoords = (lat ,long) => async dispatch => {\r\n  const response = await openweathermap.get(`/weather?lat=${lat}&lon=${long}&appid=9af1d53ab396d07e060362a1b6c5c8cb`);\r\n  dispatch({type:'FETCH_WEATHER_COORDS',payload:response.data});\r\n};\r\n","import React,{Component} from 'react';\r\nimport { fetchWeather ,fetchWeatherCoords } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport 'weather-icons/css/weather-icons.css';\r\n\r\nclass PostList extends Component{\r\n  //ICON SELECTOR\r\n  onCliChange = (id) => {\r\n    if(id === 800){\r\n      //CLEAR SKY\r\n      return ['var(--img-6)','var(--col-6)','wi-day-sunny'];\r\n\r\n    }else if (id>800 && id<805) {\r\n      //CLOUD\r\n      return ['var(--img-2)','var(--col-2)','wi-cloudy'];\r\n\r\n    }else if (id>700 && id<782) {\r\n      //FOG,MIST\r\n      return ['var(--img-5)','var(--col-5)','wi-windy'];\r\n\r\n    }else if (id>599 && id<623) {\r\n      //SNOW\r\n      return ['var(--img-4)','var(--col-4)','wi-snowflake-cold'];\r\n\r\n    }else if (id>199 && id<233) {\r\n      //THUNDERSTORM\r\n      return ['var(--img-3)','var(--col-3)','wi-thunderstorm'];\r\n\r\n    }else {\r\n      //RAIN\r\n      if(id>299 && id<322){\r\n        return ['var(--img-1)','var(--col-1)','wi-sprinkle'];\r\n      }else if(id>499 && id<505){\r\n        return ['var(--img-1)','var(--col-1)','wi-showers'];\r\n      }else {\r\n        return ['var(--img-1)','var(--col-1)','wi-rain'];\r\n      }\r\n    }\r\n  };\r\n\r\n  //TEMPERATURE C0NVERT K TO C\r\n  CalcTemp(temp){\r\n    return Math.round(temp-273.15);\r\n  };\r\n\r\n  onValid = () => {\r\n    //DESTRUCTION\r\n    let { pressure ,temp ,temp_max ,temp_min ,humidity } = this.props.posts.main;\r\n    let { speed } = this.props.posts.wind;\r\n    let { description ,id } = this.props.posts.weather[0];\r\n    const { name } = this.props.posts;\r\n    const { country } = this.props.posts.sys;\r\n\r\n    //TEMPERATURE C0NVERT (Function Call)\r\n    temp = this.CalcTemp(temp);\r\n    temp_max = this.CalcTemp(temp_max);\r\n    temp_min = this.CalcTemp(temp_min);\r\n\r\n    //WIND CONVERT SPEED MTR/SEC TO KM/H\r\n    speed = Math.round(speed * 3.6);\r\n\r\n    //IMAGE AND ICONS\r\n    let icon = ['var(--img-def)','var(--col-def)',''];\r\n    icon = this.onCliChange(id);\r\n    document.body.style.backgroundImage = icon[0];\r\n    var widget = document.getElementsByClassName('widget-main')[0];\r\n    widget.style.backgroundImage = icon[1];\r\n\r\n    //DATE TIME\r\n    var d = new Date();\r\n    var n = d.toDateString();\r\n\r\n    return (\r\n      <>\r\n        {/*LEFT-WIDGET*/}\r\n       <div className=\"widget-left\">\r\n\r\n         <div className=\"season\">\r\n           <div className=\"degree\">\r\n             <h4>Pressure</h4>\r\n             <h3>{pressure}mb</h3>\r\n           </div>\r\n           <div className=\"date\">\r\n             <h6><i id=\"i-20\" className='wi wi-barometer'></i></h6>\r\n           </div>\r\n            <div className=\"clear\"> </div>\r\n         </div>\r\n\r\n         <div className=\"season w3\">\r\n           <div className=\"degree\">\r\n             <h4>Temperature</h4>\r\n             <h3>{temp}°c</h3>\r\n           </div>\r\n           <div className=\"date temp\">\r\n             <h6><em>Temp_MAX:</em>{temp_max}°c</h6>\r\n             <h6><em>Temp_MIN:</em>{temp_min}°c</h6>\r\n           </div>\r\n            <div className=\"clear\"> </div>\r\n         </div>\r\n\r\n         <div className=\"season agile\">\r\n           <div className=\"degree\">\r\n             <h4>Humidity</h4>\r\n             <h3>{humidity}%</h3>\r\n           </div>\r\n           <div className=\"date\">\r\n             <h6><i id=\"i-20\" className='wi wi-humidity'></i></h6>\r\n           </div>\r\n            <div className=\"clear\"> </div>\r\n         </div>\r\n\r\n         <div className=\"season\">\r\n           <div className=\"degree\">\r\n             <h4>Wind</h4>\r\n             <h3>{speed}Km/h</h3>\r\n           </div>\r\n           <div className=\"date\">\r\n             <h6><i id=\"i-20\" className='wi wi-strong-wind'></i></h6>\r\n           </div>\r\n            <div className=\"clear\"> </div>\r\n         </div>\r\n\r\n       </div>\r\n       {/*LEFT-WIDGET__END*/}\r\n\r\n       {/*RIGHT-WIDGET*/}\r\n       <div className=\"widget-right w3l\">\r\n         <p>{n}</p>\r\n         <h4 id='place'>{name},{country}</h4>\r\n         <h5 id='desc'>{description}</h5>\r\n         {/*<img src=\"../images/icon/i-1.png\" />*/}\r\n         <h2><i className={`wi ${icon[2]} display-1`}></i></h2>\r\n       </div>\r\n       {/*RIGHT-WIDGET__END*/}\r\n     </>\r\n    );\r\n  };\r\n\r\n  render(){\r\n    console.log('===============POSTLIST=============');\r\n    console.log('render');\r\n    console.log(this.props.posts);\r\n\r\n    return(\r\n      <>\r\n      { this.props.posts.length !== 0 ? this.onValid() : null}\r\n      <p id='des'></p>\r\n     </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log('mapStateToProps');\r\n  return ({ posts:state.weather });\r\n};\r\n\r\nexport default connect(mapStateToProps,{ fetchWeather ,fetchWeatherCoords })(PostList);\r\n","import React,{Component} from 'react';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux';\r\nimport { fetchWeather ,fetchWeatherCoords } from '../actions';\r\n\r\nclass SearchBox extends Component{\r\n  state = { term:'' };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { term } = this.state;\r\n    this.props.fetchWeather(term);\r\n\r\n    this.setState({term: ''});\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log('cdm geo');\r\n    navigator.geolocation.getCurrentPosition(\r\n      position => this.onGeolocation(position),\r\n      err => alert(\"ALLOW 'LOCATION' FOR GREATER EXPERIANCE!\")\r\n    );\r\n  }\r\n\r\n  onGeolocation = (event) => {\r\n    const {latitude ,longitude} = event.coords;\r\n    console.log(latitude ,longitude);\r\n    this.props.fetchWeatherCoords(latitude, longitude);\r\n  };\r\n\r\n  render(){\r\n    return(\r\n        <form onSubmit={this.onFormSubmit}>\r\n          <div className=\"input-group\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"City Name\" value={this.state.term} onChange={e =>{this.setState({term:e.target.value})}}/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-light\" type=\"submit\">Search</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({ fetchWeather ,fetchWeatherCoords },dispatch);\r\n};\r\nexport default connect(null,mapDispatchToProps)(SearchBox);\r\n","import React,{ Component } from 'react';\r\nimport PostList from './postList';\r\nimport SearchBox from './SearchBox';\r\n\r\nclass App extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"widget-main\">\r\n        <div className=\"widget-climate-wthree\">\r\n\r\n          <SearchBox />{/*search functional*/}\r\n          <PostList />{/*posting functional*/}\r\n\r\n          <div className=\"clear\"></div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport postWeather from './postWeather';\r\n \r\nexport default combineReducers({\r\n  weather:postWeather\r\n});\r\n","export default (state = [],action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_WEATHER_SEARCH':\r\n      return action.payload;\r\n    case 'FETCH_WEATHER_COORDS':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React,{Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore,applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nclass Index extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"widget\">\r\n        <div className=\"wrap\">\r\n          <h1>What's Weather!</h1>\r\n          <App />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <Index/>\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}